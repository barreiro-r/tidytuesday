[
  {
    "objectID": "posts/2025-05-20/notebook.html",
    "href": "posts/2025-05-20/notebook.html",
    "title": "Water quality at Sydney Beaches",
    "section": "",
    "text": "tuesdata &lt;- tidytuesdayR::tt_load(2025, week = 20)\nwater_quality &lt;- tuesdata$water_quality\nweather &lt;- tuesdata$weather\n\n\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(scales)\nlibrary(showtext)\nlibrary(ggtext)\n\nfont_add_google(\"Ubuntu\", \"Ubuntu\", regular.wt = 300, bold.wt = 700)\nshowtext_auto()\nshowtext_opts(dpi = 300)"
  },
  {
    "objectID": "posts/2025-05-20/notebook.html#before",
    "href": "posts/2025-05-20/notebook.html#before",
    "title": "Water quality at Sydney Beaches",
    "section": "Before",
    "text": "Before\n\ndata2plot |&gt;\n  filter(region != 'Western Sydney') |&gt;\n  ggplot(aes(x = date, y = roll_mean_enterococci)) +\n  geom_smooth(aes(color = region), linewidth = 0.5, se = FALSE, span = .2) +\n  labs(\n    title = 'Water Quality at Sydney Beaches',\n    subtitle = str_wrap(\n      width = 50,\n      'High concetration of _Enterococci spp._ in beach water can indicate contamination and poses health risks to swimmers, such as gastrointestinal upset and infections.'\n    )\n  )"
  },
  {
    "objectID": "posts/2025-05-20/notebook.html#after",
    "href": "posts/2025-05-20/notebook.html#after",
    "title": "Water quality at Sydney Beaches",
    "section": "After",
    "text": "After\n\naxis_text &lt;-\n  tibble(y = c(100, 200, 300)) |&gt;\n  mutate(\n    label = if_else(\n      y == max(y),\n      str_c(y, ' Enterococcus spp. CFL/ml'),\n      str_c(y)\n    )\n  ) |&gt;\n  mutate(date = data2plot$date |&gt; min())\n\ndata2plot |&gt;\n  filter(region != 'Western Sydney') |&gt;\n  ggplot(aes(x = date, y = roll_mean_enterococci)) +\n\n  geom_text(\n    data = axis_text,\n    aes(y = y, label = label, x = date - 2000),\n    size = 2,\n    color = '#9fa8c2',\n    hjust = 0,\n    vjust = -0.4\n  ) +\n\n  geom_smooth(aes(color = region), linewidth = 0.5, se = FALSE, span = .2) +\n  guides(color = 'none') +\n  facet_wrap(~region, ncol = 2, scales = 'free_x') +\n  gghighlight::gghighlight(\n    roll_mean_enterococci &gt;= 0,\n    keep_scales = TRUE,\n    use_direct_label = FALSE,\n    unhighlighted_params = list(\n      alpha = 0.75,\n      linewidth = 0.3,\n      color = '#d3daed'\n    )\n  ) +\n\n  theme_minimal() +\n  labs(\n    x = NULL,\n    y = NULL,\n    title = 'Water Quality at Sydney Beaches',\n    subtitle = str_wrap(\n      width = 60,\n      'High concetration of _Enterococci spp._ in beach water can indicate contamination and poses health risks to swimmers, such as gastrointestinal upset and infections.'\n    ) |&gt; str_replace_all('\\n','&lt;br&gt;')\n  ) +\n\n  theme(\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(\n      linewidth = .1,\n      color = '#d3daed'\n    ),\n    panel.grid.minor = element_blank(),\n    axis.ticks.x = element_line(color = '#9fa8c2', linewidth = .25),\n    text = element_text(family = \"Ubuntu\"),\n    axis.text = element_text(color = '#9fa8c2', hjust = .5, size = 6),\n    axis.text.y = element_blank(),\n    plot.title = element_text(family = 'Ubuntu', face = 'bold', size = 16),\n    plot.subtitle = element_markdown(\n      family = 'Ubuntu',\n      size = 9,\n      color = '#4a5063',\n      margin = margin(0, 0, 20, 0),\n      lineheight = 1.25,\n    ),\n    panel.spacing = unit(2, \"lines\"),\n    strip.placement = \"outside\",\n    strip.text = element_text(\n      # hjust = -0.11,\n      color = '#0d3bb8',\n      hjust = 0,\n      size = 7,\n      margin = margin(0, 0.5, 0, 0)\n    ),\n    strip.background = element_blank(),\n    plot.margin = margin(25, 25, 25, 25)\n  ) +\n  scale_y_continuous(expand = c(0, 0, 0, 0)) +\n  scale_x_date(\n    expand = c(0, 0, 0.1, 0),\n    label = year,\n    breaks = c(\n      data2plot$date |&gt; min(),\n      as.Date('2010-01-01'),\n      data2plot$date |&gt; max()\n    )\n  ) +\n  scale_color_manual(values = c('#0d3bb8', '#0d3bb8', '#0d3bb8', '#0d3bb8'))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tidytuesday by Rodrigo Barreiro",
    "section": "",
    "text": "Hey there, and welcome to my TidyTuesday gallery! Â ðŸ‘‹\nIf youâ€™re not familiar, #TidyTuesday is this awesome weekly data challenge run by the R for Data Science online community. Every week, they release a brand new dataset, and I jump at the chance to practice my data wrangling and visualization skills in R (and Python).\nFor each entry, youâ€™ll find my code, the visuals I came up with.\nI love seeing what stories the numbers can tell and I hope you enjoy it too!\nâ€” Rodrigo Barreiro\n\nGallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntimeseries\n\n\n\n\nMay 23, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmap\n\n\ncircular\n\n\n\n\nApr 11, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2025-04-11/notebook.html",
    "href": "posts/2025-04-11/notebook.html",
    "title": "National Science Foundation Grant Terminations under the Trump Administration",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(curl)\nlibrary(ggplot2)\nlibrary(ggimage)\nlibrary(ggrepel)\nlibrary(ggtext)\n  \n\n# ---- Data Preparation ----\n\ntuesdata &lt;- tidytuesdayR::tt_load(2025, week = 14)\ncare_state &lt;- tuesdata$care_state\n\ndata2plot &lt;- \n  care_state |&gt;\n  mutate(score = if_else(is.na(score), 0, score)) |&gt;\n  filter(measure_id %in% c('HCP_COVID_19','IMM_3')) |&gt;\n  mutate(measure_id = case_when(\n    measure_id == 'HCP_COVID_19' ~ \"COVID-19\",\n    measure_id == 'IMM_3' ~ \"Influenza\"\n  ))\n\n# --- Raw Plot\ndata2plot |&gt;\n  ggplot(aes(x = score, y = state, fill = measure_id)) +\n  geom_col()\n\n\n\n\n\n\n\n# --- Stage 2\n\nlibrary(geofacet)\ndata2plot |&gt;\n  ggplot(aes(x = score, y = measure_id)) +\n  geom_col(aes(fill = measure_id)) +\n  facet_geo(~ state, grid = \"us_state_grid1\", strip.position = \"top\")\n\n\n\n\n\n\n\n# --- Stage 3\n\ndata2plot |&gt;\n  ggplot(aes(x = score, y = measure_id)) +\n  geom_col(aes(fill = measure_id)) +\n  facet_geo(~ state, grid = \"us_state_grid1\", strip.position = \"top\") +\n  coord_polar() +\n  geom_text(data = .%&gt;% filter(measure_id == 'Influenza'), x = 0, y = -1, aes(label = scales::percent(score/100, accuracy = 1), color = measure_id), size = 2.5,fontface = \"bold\") +\n  geom_text(data = .%&gt;% filter(measure_id == 'COVID-19'), x = 0, y = -3, aes(label = scales::percent(score/100, accuracy = 1), color = measure_id), size = 2.5,fontface = \"bold\") +\n  scale_y_discrete(expand = c(0,3,0,0)) +\n  scale_x_continuous(limits = c(0,100), expand = c(0,0,0,0)) +\n  theme_void()\n\n\n\n\n\n\n\n# --- Stage 4\n\n\ndata2plot |&gt;\n  ggplot(aes(x = score, y = measure_id)) +\n  geom_col(aes(fill = measure_id)) +\n  geom_text(data = .%&gt;% filter(measure_id == 'Influenza'), x = 0, y = -1, aes(label = scales::percent(score/100, accuracy = 1), color = measure_id), size = 2.5,fontface = \"bold\") +\n  geom_text(data = .%&gt;% filter(measure_id == 'COVID-19'), x = 0, y = -3, aes(label = scales::percent(score/100, accuracy = 1), color = measure_id), size = 2.5,fontface = \"bold\") +\n  coord_polar() +\n  facet_geo(~ state, grid = \"us_state_grid1\", strip.position = \"top\") +\n  scale_y_discrete(expand = c(0,3,0,0)) +\n  scale_x_continuous(limits = c(0,100), expand = c(0,0,0,0)) +\n  scale_fill_manual(values = c(\"#99780b\",\"#14405C\")) +\n  scale_color_manual(values = c(\"#99780b\",\"#14405C\")) +\n  labs(\n    fill = NULL, \n    title = \"US Healthcare Personnel Vaccination\", \n    subtitle = \"Percentage of healthcare personnel who are up to date with COVID-19 or Influenza vaccinations on US (2024)\",\n    caption = 'SOURCE: #Tidytuesday 2025-04-08') +\n  guides(color = 'none') +\n  theme_void() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(family = \"Ubuntu\", size = 20, face = 'bold'),\n    plot.subtitle = element_markdown(size = 9,lineheight = 1.25, margin = margin(5,0,20,0)),\n    legend.position = \"top\",\n    text = element_text(family = \"Ubuntu\"),\n    strip.text = element_text(color = 'grey30'),\n    legend.margin = margin(0,0,20,0),\n    legend.spacing = unit(0.1, 'cm'),\n    legend.key.height= unit(0.3, 'cm'),\n    legend.key.width= unit(0.5, 'cm'))"
  }
]